<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGetHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JvoAAAAASUVORK5CYII=
</value>
  </data>
</root>